#|
 This file is a part of Terrable
 (c) 2018 Shirakumo http://tymoon.eu (shinmera@tymoon.eu)
 Author: Nicolas Hafner <shinmera@tymoon.eu>
|#

(in-package #:org.shirakumo.fraf.terrable)

(defun read-marker (stream buffer &key start end)
  (loop for i from (or start 0) below (or end (length buffer))
        for code = (fast-io:readu8 stream)
        do (setf (aref buffer i) (code-char code))
        finally (return buffer)))

(defun check-header (stream buffer expected)
  (read-marker stream buffer)
  (unless (string= buffer expected)
    (error "Invalid header: got ~s, expected ~s." buffer expected)))

(defclass terrain ()
  ((width :initform NIL :accessor width)
   (height :initform NIL :accessor height)
   (scale :initform NIL :accessor scale)
   (curve-radius :initform NIL :accessor curve-radius)
   (curve-mode :initform NIL :accessor curve-mode)
   (data :initform NIL :accessor data)))

(defun read-chunk (stream buffer terrain)
  (let ((marker (read-marker stream buffer :end 4)))
    (flet ((markerp (thing)
             (string= marker thing :end2 4)))
      (cond ((markerp "XPTS")
             (setf (width terrain) (fast-io:readu16-le stream)))
            ((markerp "YPTS")
             (setf (height terrain) (fast-io:readu16-le stream)))
            ((markerp "SIZE")
             (let ((n (1+ (fast-io:readu16-le stream))))
               (unless (height terrain) (setf (height terrain) n))
               (unless (width terrain) (setf (width terrain) n))
               n))
            ((markerp "SCAL")
             (let ((x (fast-io:readu32-le stream))
                   (y (fast-io:readu32-le stream))
                   (z (fast-io:readu32-le stream)))
               (setf (scale terrain) (list (ieee-floats:decode-float32 x)
                                           (ieee-floats:decode-float32 y)
                                           (ieee-floats:decode-float32 z)))))
            ((markerp "CRAD")
             (let ((c (fast-io:readu32-le stream)))
               (setf (curve-radius terrain) (ieee-floats:decode-float32 c))))
            ((markerp "CRVM")
             (let ((m (fast-io:readu32-le stream)))
               (setf (curve-mode terrain) (case m
                                            (0 :flat)
                                            (1 :draped)
                                            (T (warn "Non-standard curvature mode: ~s" m)
                                             m)))))
            ((markerp "ALTW")
             (let* ((h-scale (fast-io:read16-le stream))
                    (h-base (fast-io:read16-le stream))
                    ;; FIXME
                    (factor ?)
                    (data (static-vectors:make-static-vector (* (width terrain) (height terrain) 2))))
               (fast-io:fast-read-sequence data stream)
               (setf (data terrain) data)))
            ((markerp "EOF ")
             NIL)
            (T
             (warn "Unknown chunk type: ~a" (subseq marker 0 4))
             terrain)))))

(defun read-terragen (stream)
  (let ((marker-buffer (make-array 8 :element-type 'base-char))
        (terrain (make-instance 'terrain)))
    (check-header stream buffer "TERRAGEN")
    (check-header stream buffer "TERRAIN ")
    (loop while (read-chunk stream buffer terrain))))
